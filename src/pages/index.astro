---
import Layout from '../layouts/Layout.astro';
import CourseCard from '../components/CourseCard.astro';
---

<Layout title="Home | Sehs.io">
  <main>
    <!-- Jumbotron -->
    <section class="p-4">
        <canvas id="starfield-canvas"></canvas>
        <h1 class="text-center display-5 font-gameplay fw-bold">St. Edward High School</h1>
        <h2 class="text-center font-gameplay">Computer Science and other stuff</h2>
        <div id="logo-container"></div>
    </section>

    <!-- Main Content -->
    <section class="container-fluid pt-5 left-triangle-bg">

        <!-- Courses -->
        <div class="container mb-3">
            <h2 class="text-center font-gameplay mb-5">Course Content</h2>

            <div class="row">
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="C++ Fundamentals"
                        img="/courses/cpp-fundamentals/cpp-thumbnail.png"
                        link="/"
                    />
                </div>
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="C# Fundamentals"
                        img="/courses/c-sharp-fundamentals/c-sharp-thumbnail.png"
                        link="/c-sharp-fundamentals/"
                    />
                </div>
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="Python Fundamentals"
                        img="/courses/python-fundamentals/python-thumbnail.png"
                        link="/python-fundamentals/"
                    />
                </div>
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="Code Challenges"
                        img="/courses/code-challenges/code-challenges-thumbnail.png"
                        link="/code-challenges/"
                    />
                </div>
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="Arduino Fundamentals"
                        img="/courses/arduino-fundamentals/arduino-thumbnail.png"
                        link="/"
                    />
                </div>
                <div class="col-sm-12 col-md-4 col-lg-3">
                    <CourseCard
                        title="Robotics Fundamentals"
                        img="/courses/robotics-fundamentals/robotics-thumbnail.png"
                        link="/robotics-fundamentals/"
                    />
                </div>
                <hr>
            </div>
        </div>

        <!-- Cheat Sheets / Utilities -->
        <div class="container pb-5">
            <div class="row">
                <div class="col-sm-12 col-md-6">
                    <h2 class="text-center font-gameplay mb-5">Cheat Sheets</h2>
                    <ul class="list-group list-group-flush">
                      <li class="list-group-item">
                        <a href="https://www.raylib.com/cheatsheet/cheatsheet.html" target="_blank">
                          üîó Raylib Cheat Sheet (C Language)
                        </a>
                      </li>
                    </ul>
                </div>
                <div class="col-sm-12 col-md-6">
                    <h2 class="text-center font-gameplay mb-5">Utilities</h2>
                    <ul class="list-group list-group-flush">
                      <li class="list-group-item">
                        <a href="utilities/rgb-color-picker">üé® RGB Color Picker</a>
                      </li>
                      <li class="list-group-item">
                        <a href="utilities/caesar-cipher">üóùÔ∏è Caesar Cipher</a>
                      </li>
                    </ul>
                </div>
            </div>
        </div>

    </section>
  </main>
</Layout>

<!-- 3D Logo -->
<script>
    import P5 from 'p5';

    const sketch = (p: P5) => {
        let toggled = false;
        let logo: P5.Geometry;

        let fillLogo = () => {
            p.fill('#fbc604');
            p.stroke('#0e8b70');
        };

        let clearFillLogo = () => {
            p.noFill();
            p.noStroke();
            p.normalMaterial();
        };

        p.setup = () => {
            const canvas = p.createCanvas(250, 250, p.WEBGL);
            canvas.mouseOver(() => (toggled = true));
            canvas.mouseOut(() => (toggled = false));
            logo = p.loadModel('/eds-logo.stl');
        };

        p.draw = () => {
            toggled ? fillLogo() : clearFillLogo();
            p.background(0, 0, 0, 0);
            p.scale(40);
            p.rotateX(1.50);
            p.rotateZ(p.frameCount * -0.035);
            p.model(logo);
        };
    };

    new P5(sketch, document.getElementById('logo-container'));
</script>

<!-- Starfield -->
<script>
  const canvas = document.getElementById("starfield-canvas") as HTMLCanvasElement;
  const c = canvas.getContext("2d");

  let w;
  let h;

  const setCanvasExtents = () => {
    w = document.body.clientWidth;
    h = canvas.parentElement.clientHeight + 50;
    canvas.width = w;
    canvas.height = h;
  };

  setCanvasExtents();

  window.onresize = () => {
    setCanvasExtents();
  };

  const makeStars = count => {
    const out = [];
    for (let i = 0; i < count; i++) {
      const s = {
        x: Math.random() * 1600 - 800,
        y: Math.random() * 900 - 450,
        z: Math.random() * 1000
      };
      out.push(s);
    }
    return out;
  };

  let stars = makeStars(10000);

  const clear = () => {
    c.fillStyle = "black";
    c.fillRect(0, 0, canvas.width, canvas.height);
  };

  const putPixel = (x, y, brightness) => {
    const intensity = brightness * 255;
    const rgb = "rgb(" + intensity + "," + intensity + "," + intensity + ")";
    c.fillStyle = rgb;
    c.fillRect(x, y, 1, 1);
  };

  const moveStars = distance => {
    const count = stars.length;
    for (var i = 0; i < count; i++) {
      const s = stars[i];
      s.z -= distance;
      while (s.z <= 1) {
        s.z += 1000;
      }
    }
  };

  let prevTime;
  const init = time => {
    prevTime = time;
    requestAnimationFrame(tick);
  };

  const tick = time => {
    let elapsed = time - prevTime;
    prevTime = time;

    moveStars(elapsed * 0.1);

    clear();

    const cx = w / 2;
    const cy = h / 2;

    const count = stars.length;
    for (var i = 0; i < count; i++) {
      const star = stars[i];

      const x = cx + star.x / (star.z * 0.001);
      const y = cy + star.y / (star.z * 0.001);

      if (x < 0 || x >= w || y < 0 || y >= h) {
        continue;
      }

      const d = star.z / 1000.0;
      const b = 1 - d * d;

      putPixel(x, y, b);
    }

    requestAnimationFrame(tick);
  };

  requestAnimationFrame(init);
</script>

<style>
    #logo-container {
        width: 250px;
        height: 250px;
        margin: 0 auto;
    }

    #starfield-canvas {
        z-index: -1;
        position: absolute;
        top: 0;
        left: 0;
    }

    .left-triangle-bg {
        background-image: url('/left-triangle-bg.png');
        background-repeat: repeat-y;
    }
</style>
